
$(document).ready(function()
{
  
    const url="https://codeforces.com/api/user.status?handle="
    
      async function getdata(){
          $("ul").empty()
        let modified_url=url+$("#test").val()
          const jsondata=await fetch(modified_url)
          const jsdata=await jsondata.json()
          console.log(jsdata.result)
          let unsolved=new Set()
          let solved=new Set()
          unsolved.clear()
          solved.clear()
    
          for(let i=0;i<jsdata.result.length;i++)
          {
              if(jsdata.result[i].verdict=="OK")
              {
                  let str=jsdata.result[i].problem.contestId+"-"+jsdata.result[i].problem.index
                  solved.add(
                      str
                  )
    
                  if(unsolved.has(str))
                  {
                      unsolved.delete(str)
                  }
    
              }
              else
              {
                let str=jsdata.result[i].problem.contestId+"-"+jsdata.result[i].problem.index
                if(!solved.has(str))
                {unsolved.add(
                    // jsdata.result[i].problem.contestId,
                    // contestIndex:jsdata.result[i].problem.index
                    str
                  )
                }
              }
          }
          console.log(solved)
          console.log(unsolved)
          for(let i of unsolved)
          {
              console.log(i)
          }
          for(let i of unsolved)
      {
        let pos=i.indexOf('-')
        let str=i.slice(0,pos)
        let str2=i.slice(pos+1,i.length)
        let url="https://codeforces.com/contest/"+str+"/problem/"+str2
        let txt=$("<a></a>")
        txt.html(i+"<br>")
        txt.attr("href",url)

        // $("ul").append(i+"<br>")
        $("ul").append(txt)
        
      }
}
      getdata()
    // $("button").click(getdata())
    $("button").click(function(){getdata()})
    
    });



---------------------------------------------------------------------




function generate_easy_question(arr, no) {
            let result = [];

            for (let i = 0; i < arr.problems.length; i++) {
              let str = arr.problems[i].contestId + "-" + arr.problems[i].index;
              if(solved.has(str)){
                continue;
              }
              if (no == 0) {
                break;
              }
              if (arr.problems[i].rating !== undefined) {
                if (arr.problems[i].rating <= 1200) {
                  no--;
                  result.push(arr.problems[i]);
                }
              } else {
                if (arr.problems[i].points <= 1200) {
                  no--;
                  result.push(arr.problems[i]);
                }
              }
            }
            return result;
          }
          function generate_medium_question(arr, no) {
            let result = [];

            for (let i = 0; i < arr.problems.length; i++) {
              let str = arr.problems[i].contestId + "-" + arr.problems[i].index;
              if(solved.has(str)){
                continue;
              }
              if (no == 0) {
                break;
              }
              if (arr.problems[i].rating !== undefined) {
                if (arr.problems[i].rating <= 1700&&arr.problems[i].rating>1200) {
                  no--;
                  result.push(arr.problems[i]);
                }
              } else {
                if (arr.problems[i].points <= 1700&&arr.problems[i].points >= 1200) {
                  no--;
                  result.push(arr.problems[i]);
                }
              }
            }
            return result;
          }
          function generate_hard_question(arr, no) {
            let result = [];

            for (let i = 0; i < arr.problems.length; i++) {
              let str = arr.problems[i].contestId + "-" + arr.problems[i].index;
              if(solved.has(str)){
                continue;
              }
              if (no == 0) {
                break;
              }
              if (arr.problems[i].rating !== undefined) {
                if (arr.problems[i].rating <= 2400&&arr.problems[i].rating>1900) {
                  no--;
                  result.push(arr.problems[i]);
                }
              } else {
                if (arr.problems[i].points >= 1500&&arr.problems[i].points <= 1900) {
                  no--;
                  result.push(arr.problems[i]);
                }
              }
            }
            return result;
          }
          function make_list(A){
              let str=A.contestId+'-'+A.index;
              let p=convert_to_link(str);
              let li=document.createElement('li');
              li.innerHTML=`<a href=${p}>${str}</a>`;
              return li;
          }

          async function get_questions(){
            let modified_url = `https://codeforces.com/api/problemset.problems?tags=${tag_name}`;
            console.log(modified_url)
            const jsondata = await fetch(modified_url);
            const jsdata = await jsondata.json();
            let E=generate_easy_question(jsdata.result, 5);
            let M=generate_medium_question(jsdata.result,10);
            let H=generate_hard_question(jsdata.result,9);
            console.log(E)
            console.log(M)
            console.log(H)
            let arr1=[]
            arr1.push(E[0]); arr1.push(M[0]); arr1.push(H[0])
            let arr2=[]
            arr2.push(E[1]); arr2.push(M[1]); arr2.push(H[1])
            let arr3=[]
            arr3.push(E[2]); arr3.push(M[2]); arr3.push(H[2])
            let arr4=[]
            arr4.push(E[3]); arr4.push(M[3]); arr4.push(H[3])
            let arr5=[]
            arr5.push(E[4]); arr5.push(M[4]); arr5.push(H[4])
            let arr6=[]
            arr6.push(M[5]); arr6.push(M[6]); arr6.push(H[5])
            let arr7=[]
            arr7.push(M[7]); arr7.push(M[8]); arr7.push(H[6])
            let arr8=[]
            arr8.push(M[9]); arr8.push(H[7]); arr8.push(H[8])
            
        }
        get_questions()  